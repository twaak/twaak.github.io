(()=>{var J=(e,o)=>()=>(o||e((o={exports:{}}).exports,o),o.exports);var P=J((he,G)=>{G.exports=window.Tablesort});var W=P();function X(e){return e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}function N(e,o){e=e||[];for(let t=0;t<e.length;t++)o(e[t])}function K(){return document.documentElement&&document.documentElement.scrollTop||document.body.scrollTop}function Y(){let e=document.getElementById("menu-toggle-mobile"),o=document.getElementById("menu-mobile");window.menuToggleMobileEventListener||(e.addEventListener("click",()=>{document.body.classList.toggle("blur"),e.classList.toggle("active"),o.classList.toggle("active")}),window.menuToggleMobileEventListener=!0),window._menuMobileOnClickMask=()=>{e.classList.remove("active"),o.classList.remove("active")},window.clickMaskEventSet.add(window._menuMobileOnClickMask)}function I(e){window.setTheme(e),window.saveTheme(e)}function Z(){Array.from(document.getElementsByClassName("theme-switch")).forEach(e=>{e.addEventListener("click",()=>{let o=document.body.getAttribute("theme");I(o==="dark"?"light":"dark");for(let t of window.switchThemeEventSet)t()})})}function Q(){Array.from(document.getElementsByClassName("color-theme-select")).forEach(e=>{let o=document.body.getAttribute("theme");for(let t=0;t<e.options.length;t++)if(e.options[t].value===o){e.selectedIndex=t;break}e.addEventListener("change",()=>{let t=e.value;window.localStorage&&localStorage.setItem("theme",t),t!=="auto"?I(t):window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches?I("dark"):I("light");for(let n of window.switchThemeEventSet)n()})})}function U(){let e=window.config.search,o=window.matchMedia&&window.matchMedia("only screen and (max-width: 680px)").matches;if(!e||o&&window._searchMobileOnce||!o&&window._searchDesktopOnce)return;let t=e.maxResultLength?e.maxResultLength:10,n=e.snippetLength?e.snippetLength:50,s=e.highlightTag?e.highlightTag:"em",i=e.isCaseSensitive?e.isCaseSensitive:!1,a=e.minMatchCharLength?e.minMatchCharLength:1,d=e.findAllMatches?e.findAllMatches:!1,m=e.location?e.location:0,M=e.threshold?e.threshold:.3,_=e.distance?e.distance:100,b=e.ignoreLocation?e.ignoreLocation:!1,A=e.useExtendedSearch?e.useExtendedSearch:!1,B=e.ignoreFieldNorm?e.ignoreFieldNorm:!1,r=o?"mobile":"desktop",T=document.getElementById(`header-${r}`),l=document.getElementById(`search-input-${r}`),O=document.getElementById(`search-toggle-${r}`),x=document.getElementById(`search-loading-${r}`),f=document.getElementById(`search-clear-${r}`),q=window.config["autocomplete.min.js"],z=window.config["algoliasearch.min.js"],F=window.config["fuse.min.js"];o?(window._searchMobileOnce=!0,l.addEventListener("focus",()=>{C("autocomplete-script",q,()=>{j(),l.focus()}),window.config?.search?.type==="algolia"?C("algolia-script",z,null):C("fuse-script",F,null),document.body.classList.add("blur"),T.classList.add("open"),l.focus()}),document.getElementById("search-cancel-mobile").addEventListener("click",()=>{T.classList.remove("open"),document.body.classList.remove("blur"),document.getElementById("menu-toggle-mobile").classList.remove("active"),document.getElementById("menu-mobile").classList.remove("active"),x.style.display="none",f.style.display="none",window._searchMobile&&window._searchMobile.autocomplete.setVal("")}),f.addEventListener("click",()=>{f.style.display="none",window._searchMobile&&window._searchMobile.autocomplete.setVal("")},!1),window._searchMobileOnClickMask=()=>{T.classList.remove("open"),x.style.display="none",f.style.display="none",window._searchMobile&&window._searchMobile.autocomplete.setVal("")},window.clickMaskEventSet.add(window._searchMobileOnClickMask)):(window._searchDesktopOnce=!0,O.addEventListener("click",()=>{C("autocomplete-script",q,()=>{j(),l.focus()}),window.config?.search?.type==="algolia"?C("algolia-script",z,null):C("fuse-script",F,null),document.body.classList.add("blur"),T.classList.add("open"),l.focus()}),f.addEventListener("click",()=>{f.style.display="none",window._searchDesktop&&window._searchDesktop.autocomplete.setVal("")}),document.addEventListener("keydown",v=>{v.ctrlKey&&v.code==="KeyK"&&(v.preventDefault(),O.click())}),window._searchDesktopOnClickMask=()=>{T.classList.remove("open"),x.style.display="none",f.style.display="none",window._searchDesktop&&window._searchDesktop.autocomplete.setVal("")},window.clickMaskEventSet.add(window._searchDesktopOnClickMask)),l.addEventListener("input",()=>{l.value===""?f.style.display="none":f.style.display="inline"});let j=()=>{let v=autocomplete(`#search-input-${r}`,{hint:!1,autoselect:!0,dropdownMenuContainer:`#search-dropdown-${r}`,clearOnSelected:!1,cssClasses:{noPrefix:!0},debug:!0},{name:"search",source:(h,L)=>{x.style.display="inline",f.style.display="none";let g=c=>{x.style.display="none",f.style.display="inline",L(c)};if(e.type==="algolia")window._algoliaIndex=window._algoliaIndex||algoliasearch(e.algoliaAppID,e.algoliaSearchKey).initIndex(e.algoliaIndex),window._algoliaIndex.search(h,{offset:0,length:t*8,attributesToHighlight:["title"],attributesToRetrieve:["*"],attributesToSnippet:[`content:${n}`],highlightPreTag:`<${s}>`,highlightPostTag:`</${s}>`}).then(({hits:c})=>{let w={};c.forEach(({uri:p,date:R,_highlightResult:{title:H},_snippetResult:{content:S}})=>{w[p]&&w[p].context.length>S.value||(w[p]={uri:p,title:H.value,date:R,context:S.value})}),g(Object.values(w).slice(0,t))}).catch(c=>{console.error(c),g([])});else if(e.type==="fuse"){let c=()=>{let w={};return window._index.search(h).forEach(({item:p,refIndex:R,matches:H})=>{let S=p.title,k=p.content;H.forEach(({indices:E,value:ue,key:V})=>{if(V==="content"){let y=0;for(let u=0;u<E.length;u++){let $=k.substring(E[u][0]+y,E[u][1]+1+y),D=`<${s}>`+$+`</${s}>`;k=k.substring(0,E[u][0]+y)+D+k.substring(E[u][1]+1+y,k.length),y+=s.length*2+5}}else if(V==="title"){let y=0;for(let u=0;u<E.length;u++){let $=S.substring(E[u][0]+y,E[u][1]+1+y),D=`<${s}>`+$+`</${s}>`;S=S.substring(0,E[u][0]+y)+D+S.substring(E[u][1]+1+y,k.length),y+=s.length*2+5}}}),w[p.uri]={uri:p.uri,title:S,date:p.date,context:k}}),Object.values(w).slice(0,t)};window._index?g(c()):fetch(e.fuseIndexURL).then(w=>w.json()).then(w=>{let p={isCaseSensitive:i,findAllMatches:d,minMatchCharLength:a,location:m,threshold:M,distance:_,ignoreLocation:b,useExtendedSearch:A,ignoreFieldNorm:B,includeScore:!1,shouldSort:!0,includeMatches:!0,keys:["content","title"]};window._index=new Fuse(w,p),g(c())}).catch(w=>{console.error(w),g([])})}},templates:{suggestion:({title:h,uri:L,date:g,context:c})=>`<div><a href=${L}><span class="suggestion-title">${h}</span></a><span class="suggestion-date">${g}</span></div><div class="suggestion-context">${c}</div>`,empty:({query:h})=>`<div class="search-empty">${e.noResultsFound}: <span class="search-query">"${X(h)}"</span></div>`,footer:()=>{let{searchType:h,icon:L,href:g}=e.type==="algolia"?{searchType:"algolia",icon:'<svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M229.3 182.6c-49.3 0-89.2 39.9-89.2 89.2 0 49.3 39.9 89.2 89.2 89.2s89.2-39.9 89.2-89.2c0-49.3-40-89.2-89.2-89.2zm62.7 56.6l-58.9 30.6c-1.8.9-3.8-.4-3.8-2.3V201c0-1.5 1.3-2.7 2.7-2.6 26.2 1 48.9 15.7 61.1 37.1.7 1.3.2 3-1.1 3.7zM389.1 32H58.9C26.4 32 0 58.4 0 90.9V421c0 32.6 26.4 59 58.9 59H389c32.6 0 58.9-26.4 58.9-58.9V90.9C448 58.4 421.6 32 389.1 32zm-202.6 84.7c0-10.8 8.7-19.5 19.5-19.5h45.3c10.8 0 19.5 8.7 19.5 19.5v15.4c0 1.8-1.7 3-3.3 2.5-12.3-3.4-25.1-5.1-38.1-5.1-13.5 0-26.7 1.8-39.4 5.5-1.7.5-3.4-.8-3.4-2.5v-15.8zm-84.4 37l9.2-9.2c7.6-7.6 19.9-7.6 27.5 0l7.7 7.7c1.1 1.1 1 3-.3 4-6.2 4.5-12.1 9.4-17.6 14.9-5.4 5.4-10.4 11.3-14.8 17.4-1 1.3-2.9 1.5-4 .3l-7.7-7.7c-7.6-7.5-7.6-19.8 0-27.4zm127.2 244.8c-70 0-126.6-56.7-126.6-126.6s56.7-126.6 126.6-126.6c70 0 126.6 56.6 126.6 126.6 0 69.8-56.7 126.6-126.6 126.6z"/></svg>',href:"https://www.algolia.com/"}:{searchType:"Fuse.js",icon:"",href:"https://fusejs.io/"};return`<div class="search-footer">Search by <a href="${g}" rel="noopener noreffer" target="_blank">${L} ${h}</a></div>`}}});v.on("autocomplete:selected",(h,L,g,c)=>{h.preventDefault()}),o?window._searchMobile=v:window._searchDesktop=v};function C(v,h,L){if(document.querySelector(`#${v}`)===null){let g=document.querySelector("head"),c=document.createElement("script");c.setAttribute("src",h),c.setAttribute("id",v),c.onload=L,g.appendChild(c)}}}function ee(){document.querySelectorAll(".details").forEach(e=>{let o=e.getElementsByClassName("details-summary")[0],t=o.nextElementSibling;e.classList.contains("open")&&(t.style.maxHeight=t.scrollHeight+"px"),o.addEventListener("click",()=>{e.classList.contains("open")?t.style.maxHeight="0px":t.style.maxHeight=t.scrollHeight+"px",e.classList.toggle("open")},!1),addEventListener("beforeprint",()=>{e.classList.contains("open")||o.click()})})}function te(){window.config.lightGallery&&lightGallery(document.getElementById("content"),window.config.lightGallery)}function oe(){N(document.querySelectorAll(".content table"),e=>{let o=document.createElement("div");o.className="table-wrapper",e.parentElement.replaceChild(o,e),o.appendChild(e),window.config?.table?.sort&&new W(e)})}function ne(){let e=document.getElementById("TableOfContents");if(e===null)return;let o=window.matchMedia&&window.matchMedia("only screen and (max-width: 1000px)").matches;if(document.getElementById("toc-static").getAttribute("kept")||o)window._tocOnScroll&&window.scrollEventSet.delete(window._tocOnScroll);else{let t=document.getElementById("toc-auto"),n=e.querySelectorAll("a:first-child"),s=e.getElementsByTagName("li"),i=document.getElementsByClassName("headerLink"),a=document.body.getAttribute("header-desktop")!=="normal",d=document.getElementById("header-desktop").offsetHeight,m=20+(a?d:0),M=t.offsetTop,_=M-m+(a?0:d);window._tocOnScroll=window._tocOnScroll||(()=>{let A=document.getElementById("post-footer").offsetTop-t.getBoundingClientRect().height,B=A-m+(a?0:d);if(window.newScrollTop<_?(t.style.position="absolute",t.style.top=`${M}px`):window.newScrollTop>B?(t.style.position="absolute",t.style.top=`${A}px`):(t.style.position="fixed",t.style.top=`${m}px`),n.length===0)return;let r=-1,T=m+window.newScrollTop;if(i.length>0)if(i[i.length-1].offsetTop<T)r=i.length-1;else for(let l=0;l<i.length-1;l++){let O=i[l].offsetTop,x=i[l+1].offsetTop;if(O<=T&&x>T){r=l;break}}if(Array.from(n).forEach(l=>l.classList.remove("active")),Array.from(s).forEach(l=>l.classList.remove("has-active")),r>=0&&r<n.length){n[r].classList.add("active");let l=n[r].parentElement;for(;l!==e;)l.classList.add("has-active"),l=l.parentElement.parentElement}}),window._tocOnScroll(),window.scrollEventSet.add(window._tocOnScroll)}}function se(){window.config.mapbox&&(mapboxgl.accessToken=window.config.mapbox.accessToken,mapboxgl.setRTLTextPlugin(window.config.mapbox.RTLTextPlugin),window._mapboxArr=window._mapboxArr||[],N(document.getElementsByClassName("mapbox"),e=>{let{lng:o,lat:t,zoom:n,lightStyle:s,darkStyle:i,marked:a,navigation:d,geolocate:m,scale:M,fullscreen:_}=window.config.data[e.id],b=new mapboxgl.Map({container:e,center:[o,t],zoom:n,minZoom:.2,style:window.isDark?i:s,attributionControl:!1});a&&new mapboxgl.Marker().setLngLat([o,t]).addTo(b),d&&b.addControl(new mapboxgl.NavigationControl,"bottom-right"),m&&b.addControl(new mapboxgl.GeolocateControl({positionOptions:{enableHighAccuracy:!0},showUserLocation:!0,trackUserLocation:!0}),"bottom-right"),M&&b.addControl(new mapboxgl.ScaleControl),_&&b.addControl(new mapboxgl.FullscreenControl),b.addControl(new MapboxLanguage),window._mapboxArr.push(b)}),window._mapboxOnSwitchTheme=()=>{N(window._mapboxArr,e=>{let o=e.getContainer(),{lightStyle:t,darkStyle:n}=window.config.data[o.id];e.setStyle(window.isDark?n:t),e.addControl(new MapboxLanguage)})},window.switchThemeEventSet.add(window._mapboxOnSwitchTheme))}function ie(){if(window.config.typeit){let e=window.config.typeit,o=e.speed?e.speed:100,t=e.cursorSpeed?e.cursorSpeed:1e3,n=e.cursorChar?e.cursorChar:"|";Object.values(e.data).forEach(s=>{let i=a=>{let d=s[a];if(!document.getElementById(d).hasAttribute("data-typeit-id")){let m=new TypeIt(`#${d}`,{strings:window.config.data[d],speed:o,lifeLike:!0,cursorSpeed:t,cursorChar:n,waitUntilVisible:!0,afterComplete:()=>{if(a===s.length-1){e.duration>=0&&window.setTimeout(()=>{m.destroy()},e.duration);return}m.destroy(),i(a+1)}}).go()}};i(0)})}}function le(){function e(n){let s=document.getElementsByTagName("meta");for(let i=0;i<s.length;i++)if(s[i].getAttribute("name")===n)return s[i]}let o=e("theme-color"),t={light:"#f8f8f8",dark:"#161b22"};window._metaThemeColorOnSwitchTheme=()=>{o.content=t[document.body.getAttribute("theme")]},window.switchThemeEventSet.add(window._metaThemeColorOnSwitchTheme),window._metaThemeColorOnSwitchTheme()}function ce(){let e=document.getElementById("back-to-top-button");function o(){window.newScrollTop=K(),window.newScrollTop>20?e.style.opacity="1":e.style.opacity="0";for(let t of window.scrollEventSet)t();window.oldScrollTop=window.newScrollTop}window.addEventListener("scroll",o,!1)}function ae(){window.addEventListener("resize",()=>{window._resizeTimeout||(window._resizeTimeout=window.setTimeout(()=>{window._resizeTimeout=null;for(let e of window.resizeEventSet)e();U()},100))},!1)}function re(){document.getElementById("mask").addEventListener("click",()=>{for(let e of window.clickMaskEventSet)e();document.body.classList.remove("blur")},!1)}function de(){document.querySelectorAll(".code-block").forEach(e=>{let o=e.querySelector("div.code-block-title-bar"),t=e.querySelector("code.chroma"),n=e.querySelector("button.copy-code-button"),s=n.querySelector("span.copy-icon"),i=n.querySelector("span.check-icon"),a=e.querySelector("button.wrap-code-button"),d=e.querySelector("button.line-number-button");t.style.maxHeight=t.scrollHeight+10+"px",o.addEventListener("click",()=>{e.classList.toggle("is-open"),e.classList.toggle("is-closed")}),n?.addEventListener("click",()=>{navigator.clipboard.writeText(t.textContent),s.style.display="none",i.style.display="block",setTimeout(()=>{s.style.display="block",i.style.display="none"},3e3)}),a?.addEventListener("click",()=>{t.style.maxHeight="fit-content",e.classList.toggle("is-wrap"),t.style.maxHeight=t.scrollHeight+10+"px"}),d.addEventListener("click",()=>{e.classList.toggle("show-line-numbers")}),addEventListener("beforeprint",m=>{e.classList.contains("is-closed")&&o.click(),e.classList.contains("is-wrap")||a.click()})})}function we(){window.isDark=document.body.getAttribute("theme")!=="light",window.newScrollTop=K(),window.oldScrollTop=window.newScrollTop,window.scrollEventSet=new Set,window.resizeEventSet=new Set,window.clickMaskEventSet=new Set,window.objectFitImages&&objectFitImages(),Y(),Z(),Q(),le(),U(),de(),ee(),te(),oe(),ie(),se(),ne(),ce(),ae(),re()}we();})();
//# sourceMappingURL=data:application/json;base64,
